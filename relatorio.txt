OpenGL

Escolhemos trabalhar com o OpenGL ES 1.0 em vez do 2.0 por dois motivos, principalmente:

1)simplicidade do pipeline: como dispúnhamos de tempo bastante limitado, principalmente para programar pareadamente, seria muito bom que mantivéssemos a complexidade a um mínimo. Isso se mostrou uma decisão acertada.

2)suporte a API legada: nos dispositivos que testamos, um Jelly Bean (4.2, API 16) e um KitKat (4.4, API 19), não haveria diferença. Mas, dado que o código de exemplo da TFG, no qual nos baseamos, suportava até a API 8 sem maiores problemas, decidimos que seria interessante manter o suporte para APIs baixas. Isso se mostrou razoável ao rodar o projeto em um Gingerbread (2.3, API 8).

As texturas são desenhadas em três passos: primeiro é pintado o fundo da textura (RGBA 255, 255, 255, 0), depois a textura em si, em tom de cinza, e depois a cor de overlay, com alpha blending source, one minus alpha source.

Os arquivos de textura foram feitos no Inkscape e GIMP.

Foi necessário um tempo considerável para entender que deveria ser habilitado o modo GL_BLEND para que o alpha blending funcionasse, mesmo com a função gltexenv(GL_TEX_ENV_MODE) configurada corretamente, pois a documentação dava a entender que essa função poderia ser usada em vez do modo GL_BLEND, não em conjunto. 

Desde o início, pensamos que a cor dos objetos pudesse ser mudada dinamicamente com o uso de um overlay colorido, em vez de termos texturas pré-colorizadas, o que permite uma flexibilidade muito maior em futuras implementações, e troca um armazenamento menor por um gasto maior de processamento, o que consideramos ser razoável para um jogo desse porte.


Som

Dois dos sons foram criados no BFXR, um aplicativo em Adobe AIR que permite sintetizar uma gama de sons "retrô".

O som de aplausos foi retirado do Freesound.org

A música, do site de Kevin McLeod, www.incompetech.com

Todos os sons foram obtidos com licenças CC-BY

Os efeitos sonoros são executados com um SoundPool; a música, com um MediaPlayer. Ambos foram colocados na classe SoundManager.




Referências

http://insanitydesign.com/wp/projects/nehe-android-ports/
http://www.opengl.org/archives/resources/faq/technical/transparency.htm
http://developer.android.com/training/multiscreen/screendensities.html
http://developer.android.com/guide/topics/manifest/activity-element.html#config
https://www.khronos.org/opengles/sdk/1.1/docs/man/
http://www.pacdv.com/sounds/mechanical_sounds.html
http://www.freesound.org/people/Aiwha/sounds/189186/
http://www.bfxr.net
